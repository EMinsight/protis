variables:
  TERM: "xterm"
  DISPLAY: ":99.0"
  PYVISTA_OFF_SCREEN: "true"

stages:
  - badge
  - zenodo
  - trigdoc
  - trigdocker
  - test
  - deploy

.setup-conda:
  script:
    - conda config --set always_yes yes --set changeps1 no
    - conda config --add channels conda-forge
    - sed -i 's/name protis/name base/g' environment.yml
    - conda install mamba


.setup-Xvfb:
  script:
    - which Xvfb
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - sleep 3

.install-os-tools:
  script:
    - apt-get update -q && apt-get install -q -y --no-install-recommends make libgl1-mesa-dev xvfb


.before-python:
  script:
    - !reference [.install-os-tools, script]
    - !reference [.setup-conda, script]
    - !reference [.setup-Xvfb, script]


badge:
  stage: badge
  image:
    name: alpine/git:latest
    entrypoint: [""]
  script:
    - echo "collecting stats for badges"
    - commits=`git rev-list --all --count`
    - latest_release_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
    - logo=$(cat ./doc/_assets/opt.svg | tr '"' "'")
    - echo {\"schemaVersion\":"1", \"commits\":\"$commits\", \"release_tag\":\"$latest_release_tag\"} > badges.json
    - echo {\"schemaVersion\":"1", \"logoSvg\":\"$logo\", \"label\":\"release\", \"message\":\"$latest_release_tag\", \"color\":\"8c4ab0\", \"labelColor\":\"dedede\", \"style\":\"for-the-badge\"} > logobadge.json
  artifacts:
    paths:
      - badges.json
      - logobadge.json

staging:
  stage: trigdoc
  trigger: protis/protis.gitlab.io
  only:
    - main

container:
  stage: trigdocker
  trigger: nannos/docker
  only:
    - tags




.tester:
  stage: test
  image: benvial/protis:latest
  before_script: 
    - !reference [.before-python, script]
  only:
    - main


test-pip:
  extends: .tester
  script:
    - mamba create -n test-pip python=3.10
    - source activate test-pip
    - make install
    - make test-req
    - make test



test-conda:
  extends: .tester
  script:
    - mamba env update -n base -f environment.yml
    - make install
    - make test-req
    - make test
    - coverage xml
  coverage: '/TOTAL.*\s([.\d]+)%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml




send-snapshot:
  stage: zenodo
  image: python
  script:
    - if [[ ! $CI_COMMIT_TAG =~ ^v?[0-9]+\.[0-9]+ ]]; then exit 0; fi
    - pip install gitlab2zenodo
    - git archive --format zip --output ${CI_COMMIT_TAG#v}.zip ${CI_COMMIT_TAG}
    - g2z-send -p -m .zenodo.json ${CI_COMMIT_TAG#v}.zip
  only:
    - tags

pypi:
  image: python:latest
  stage: deploy
  cache: {}
  script:
    - pip install twine build
    - python3 -m build --sdist --wheel .
    - twine upload dist/*
  only:
    - tags
